# Multi-stage build for frontend
FROM node:18 AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
# Use --legacy-peer-deps to handle @sqlitecloud/drivers React Native peer deps
RUN npm install --legacy-peer-deps

# Copy source code
COPY . .

# Build the frontend
RUN npm run build

# Production stage with NGINX
FROM nginx:alpine

# Install gettext for envsubst
RUN apk add --no-cache gettext

# Copy built frontend from builder stage
COPY --from=builder /app/dist/public /usr/share/nginx/html

# Copy NGINX configuration template and entrypoint script
COPY deployment/nginx.conf.template /etc/nginx/conf.d/default.conf.template
COPY deployment/docker-entrypoint.sh /docker-entrypoint.sh

# Make entrypoint executable
RUN chmod +x /docker-entrypoint.sh

# Set default PORT (Cloud Run will override with PORT=8080)
ENV PORT=8080

# Cloud Run will dynamically set the port, so we don't hardcode EXPOSE
# The container will listen on whatever PORT environment variable is set

# Use custom entrypoint
ENTRYPOINT ["/docker-entrypoint.sh"]