
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.LegacySessionScalarFieldEnum = {
  sid: 'sid',
  sess: 'sess',
  expire: 'expire'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  firstName: 'firstName',
  lastName: 'lastName',
  profileImageUrl: 'profileImageUrl',
  primaryCommunity: 'primaryCommunity',
  username: 'username',
  bio: 'bio',
  location: 'location',
  website: 'website',
  status: 'status',
  statusMessage: 'statusMessage',
  timezone: 'timezone',
  dateOfBirth: 'dateOfBirth',
  isPrivate: 'isPrivate',
  showOnlineStatus: 'showOnlineStatus',
  allowDirectMessages: 'allowDirectMessages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommunityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  displayName: 'displayName',
  description: 'description',
  themeColor: 'themeColor',
  iconClass: 'iconClass',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.UserCommunityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  communityId: 'communityId',
  isPrimary: 'isPrimary',
  joinedAt: 'joinedAt'
};

exports.Prisma.ThemePreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  communityId: 'communityId',
  themeMode: 'themeMode',
  customColors: 'customColors',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  date: 'date',
  time: 'time',
  location: 'location',
  communityId: 'communityId',
  creatorId: 'creatorId',
  hostId: 'hostId',
  coHostId: 'coHostId',
  maxAttendees: 'maxAttendees',
  isPublic: 'isPublic',
  status: 'status',
  playerSlots: 'playerSlots',
  alternateSlots: 'alternateSlots',
  gameFormat: 'gameFormat',
  powerLevel: 'powerLevel',
  isRecurring: 'isRecurring',
  recurrencePattern: 'recurrencePattern',
  recurrenceInterval: 'recurrenceInterval',
  recurrenceEndDate: 'recurrenceEndDate',
  parentEventId: 'parentEventId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventAttendeeScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  userId: 'userId',
  status: 'status',
  role: 'role',
  playerType: 'playerType',
  joinedAt: 'joinedAt'
};

exports.Prisma.TournamentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  gameFormat: 'gameFormat',
  communityId: 'communityId',
  organizerId: 'organizerId',
  maxParticipants: 'maxParticipants',
  currentParticipants: 'currentParticipants',
  status: 'status',
  startDate: 'startDate',
  endDate: 'endDate',
  bracketData: 'bracketData',
  prizePool: 'prizePool',
  rules: 'rules',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TournamentParticipantScalarFieldEnum = {
  id: 'id',
  tournamentId: 'tournamentId',
  userId: 'userId',
  seed: 'seed',
  status: 'status',
  joinedAt: 'joinedAt'
};

exports.Prisma.TournamentFormatScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  description: 'description',
  supportsSeeding: 'supportsSeeding',
  requiresEvenParticipants: 'requiresEvenParticipants',
  isActive: 'isActive'
};

exports.Prisma.TournamentRoundScalarFieldEnum = {
  id: 'id',
  tournamentId: 'tournamentId',
  roundNumber: 'roundNumber',
  name: 'name',
  status: 'status',
  startTime: 'startTime',
  endTime: 'endTime',
  createdAt: 'createdAt'
};

exports.Prisma.TournamentMatchScalarFieldEnum = {
  id: 'id',
  tournamentId: 'tournamentId',
  roundId: 'roundId',
  player1Id: 'player1Id',
  player2Id: 'player2Id',
  winnerId: 'winnerId',
  status: 'status',
  gameSessionId: 'gameSessionId',
  bracketPosition: 'bracketPosition',
  player1Score: 'player1Score',
  player2Score: 'player2Score',
  matchData: 'matchData',
  startTime: 'startTime',
  endTime: 'endTime',
  createdAt: 'createdAt'
};

exports.Prisma.MatchResultScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  winnerId: 'winnerId',
  loserId: 'loserId',
  winnerScore: 'winnerScore',
  loserScore: 'loserScore',
  gameLength: 'gameLength',
  resultType: 'resultType',
  notes: 'notes',
  reportedById: 'reportedById',
  verifiedById: 'verifiedById',
  isVerified: 'isVerified',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message',
  type: 'type',
  isRead: 'isRead',
  actionUrl: 'actionUrl',
  createdAt: 'createdAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  subject: 'subject',
  content: 'content',
  isRead: 'isRead',
  createdAt: 'createdAt',
  editedAt: 'editedAt'
};

exports.Prisma.GameSessionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  gameType: 'gameType',
  hostId: 'hostId',
  coHostId: 'coHostId',
  maxPlayers: 'maxPlayers',
  currentPlayers: 'currentPlayers',
  status: 'status',
  isPrivate: 'isPrivate',
  gameRoomUrl: 'gameRoomUrl',
  settings: 'settings',
  createdAt: 'createdAt',
  startedAt: 'startedAt',
  endedAt: 'endedAt'
};

exports.Prisma.UserSocialLinkScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  platform: 'platform',
  url: 'url',
  username: 'username',
  isPublic: 'isPublic',
  createdAt: 'createdAt'
};

exports.Prisma.UserGamingProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  platform: 'platform',
  username: 'username',
  skillLevel: 'skillLevel',
  preferredFormats: 'preferredFormats',
  achievementBadges: 'achievementBadges',
  statistics: 'statistics',
  streamingSettings: 'streamingSettings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  id: 'id',
  requesterId: 'requesterId',
  receiverId: 'receiverId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  description: 'description',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  emailNotifications: 'emailNotifications',
  pushNotifications: 'pushNotifications',
  profileVisibility: 'profileVisibility',
  showOnlineStatus: 'showOnlineStatus',
  allowFriendRequests: 'allowFriendRequests',
  allowDirectMessages: 'allowDirectMessages',
  language: 'language',
  timezone: 'timezone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchmakingPreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  selectedGames: 'selectedGames',
  selectedFormats: 'selectedFormats',
  powerLevelMin: 'powerLevelMin',
  powerLevelMax: 'powerLevelMax',
  playstyle: 'playstyle',
  location: 'location',
  onlineOnly: 'onlineOnly',
  availability: 'availability',
  language: 'language',
  maxDistance: 'maxDistance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumPostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  authorId: 'authorId',
  communityId: 'communityId',
  category: 'category',
  isPinned: 'isPinned',
  isLocked: 'isLocked',
  viewCount: 'viewCount',
  likeCount: 'likeCount',
  replyCount: 'replyCount',
  lastReplyAt: 'lastReplyAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumReplyScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  authorId: 'authorId',
  content: 'content',
  parentReplyId: 'parentReplyId',
  likeCount: 'likeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumPostLikeScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.ForumReplyLikeScalarFieldEnum = {
  id: 'id',
  replyId: 'replyId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  isUsed: 'isUsed',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  LegacySession: 'LegacySession',
  User: 'User',
  Community: 'Community',
  UserCommunity: 'UserCommunity',
  ThemePreference: 'ThemePreference',
  Event: 'Event',
  EventAttendee: 'EventAttendee',
  Tournament: 'Tournament',
  TournamentParticipant: 'TournamentParticipant',
  TournamentFormat: 'TournamentFormat',
  TournamentRound: 'TournamentRound',
  TournamentMatch: 'TournamentMatch',
  MatchResult: 'MatchResult',
  Notification: 'Notification',
  Message: 'Message',
  GameSession: 'GameSession',
  UserSocialLink: 'UserSocialLink',
  UserGamingProfile: 'UserGamingProfile',
  Friendship: 'Friendship',
  UserActivity: 'UserActivity',
  UserSettings: 'UserSettings',
  MatchmakingPreference: 'MatchmakingPreference',
  ForumPost: 'ForumPost',
  ForumReply: 'ForumReply',
  ForumPostLike: 'ForumPostLike',
  ForumReplyLike: 'ForumReplyLike',
  PasswordResetToken: 'PasswordResetToken'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/runner/work/reimagined-guacamole/reimagined-guacamole/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/runner/work/reimagined-guacamole/reimagined-guacamole/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "ciName": "GitHub Actions",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma schema matching current Drizzle models\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// NextAuth.js authentication tables\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            String  @map(\"user_id\")\n  type              String\n  provider          String\n  providerAccountId String  @map(\"provider_account_id\")\n  refresh_token     String? @db.Text\n  access_token      String? @db.Text\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String? @db.Text\n  session_state     String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@map(\"accounts\")\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique @map(\"session_token\")\n  userId       String   @map(\"user_id\")\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n  @@map(\"verification_tokens\")\n}\n\n// Legacy session storage table for Express sessions\nmodel LegacySession {\n  sid    String   @id\n  sess   Json\n  expire DateTime\n\n  @@index([expire], map: \"IDX_session_expire\")\n  @@map(\"legacy_sessions\")\n}\n\n// User model with comprehensive profile fields\nmodel User {\n  id                  String   @id @default(cuid())\n  email               String?  @unique\n  firstName           String?  @map(\"first_name\")\n  lastName            String?  @map(\"last_name\")\n  profileImageUrl     String?  @map(\"profile_image_url\")\n  primaryCommunity    String?  @map(\"primary_community\")\n  username            String?\n  bio                 String?\n  location            String?\n  website             String?\n  status              String?  @default(\"offline\")\n  statusMessage       String?  @map(\"status_message\")\n  timezone            String?\n  dateOfBirth         String?  @map(\"date_of_birth\")\n  isPrivate           Boolean  @default(false) @map(\"is_private\")\n  showOnlineStatus    String   @default(\"everyone\") @map(\"show_online_status\")\n  allowDirectMessages String   @default(\"everyone\") @map(\"allow_direct_messages\")\n  createdAt           DateTime @default(now()) @map(\"created_at\")\n  updatedAt           DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  accounts                 Account[]\n  sessions                 Session[]\n  userCommunities          UserCommunity[]\n  themePreferences         ThemePreference[]\n  createdEvents            Event[]                 @relation(\"CreatedEvents\")\n  hostedEvents             Event[]                 @relation(\"HostedEvents\")\n  coHostedEvents           Event[]                 @relation(\"CoHostedEvents\")\n  eventAttendees           EventAttendee[]\n  notifications            Notification[]\n  sentMessages             Message[]               @relation(\"SentMessages\")\n  receivedMessages         Message[]               @relation(\"ReceivedMessages\")\n  hostedGameSessions       GameSession[]           @relation(\"HostedGameSessions\")\n  coHostedGameSessions     GameSession[]           @relation(\"CoHostedGameSessions\")\n  socialLinks              UserSocialLink[]\n  gamingProfiles           UserGamingProfile[]\n  sentFriendRequests       Friendship[]            @relation(\"SentFriendRequests\")\n  receivedFriendRequests   Friendship[]            @relation(\"ReceivedFriendRequests\")\n  activities               UserActivity[]\n  settings                 UserSettings[]\n  matchmakingPreferences   MatchmakingPreference[]\n  organizedTournaments     Tournament[]            @relation(\"OrganizedTournaments\")\n  tournamentParticipation  TournamentParticipant[]\n  forumPosts               ForumPost[]\n  forumReplies             ForumReply[]\n  forumPostLikes           ForumPostLike[]\n  forumReplyLikes          ForumReplyLike[]\n  tournamentMatchesPlayer1 TournamentMatch[]       @relation(\"Player1Matches\")\n  tournamentMatchesPlayer2 TournamentMatch[]       @relation(\"Player2Matches\")\n  tournamentMatchWins      TournamentMatch[]       @relation(\"WinnerMatches\")\n  matchResultsWins         MatchResult[]           @relation(\"WinnerResults\")\n  matchResultsLosses       MatchResult[]           @relation(\"LoserResults\")\n  matchResultsReported     MatchResult[]           @relation(\"ReportedResults\")\n  matchResultsVerified     MatchResult[]           @relation(\"VerifiedResults\")\n\n  @@map(\"users\")\n}\n\n// Gaming communities\nmodel Community {\n  id          String   @id\n  name        String\n  displayName String   @map(\"display_name\")\n  description String?\n  themeColor  String   @map(\"theme_color\")\n  iconClass   String   @map(\"icon_class\")\n  isActive    Boolean  @default(true) @map(\"is_active\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  userCommunities  UserCommunity[]\n  themePreferences ThemePreference[]\n  events           Event[]\n  forumPosts       ForumPost[]\n  tournaments      Tournament[]\n\n  @@map(\"communities\")\n}\n\n// User community memberships\nmodel UserCommunity {\n  id          String   @id @default(cuid())\n  userId      String   @map(\"user_id\")\n  communityId String   @map(\"community_id\")\n  isPrimary   Boolean  @default(false) @map(\"is_primary\")\n  joinedAt    DateTime @default(now()) @map(\"joined_at\")\n\n  // Relationships\n  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  community Community @relation(fields: [communityId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_communities\")\n}\n\n// User theme preferences\nmodel ThemePreference {\n  id           String   @id @default(cuid())\n  userId       String   @map(\"user_id\")\n  communityId  String?  @map(\"community_id\")\n  themeMode    String   @default(\"dark\") @map(\"theme_mode\")\n  customColors Json?    @map(\"custom_colors\")\n  updatedAt    DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  community Community? @relation(fields: [communityId], references: [id])\n\n  @@map(\"theme_preferences\")\n}\n\n// Events/Calendar system\nmodel Event {\n  id                 String   @id @default(cuid())\n  title              String\n  description        String?\n  type               String // tournament, convention, release, stream, community, personal, game_pod\n  date               String // YYYY-MM-DD format\n  time               String // HH:MM format\n  location           String\n  communityId        String?  @map(\"community_id\")\n  creatorId          String   @map(\"creator_id\")\n  hostId             String   @map(\"host_id\")\n  coHostId           String?  @map(\"co_host_id\")\n  maxAttendees       Int?     @map(\"max_attendees\")\n  isPublic           Boolean  @default(true) @map(\"is_public\")\n  status             String   @default(\"active\") // active, cancelled, completed\n  playerSlots        Int      @default(4) @map(\"player_slots\")\n  alternateSlots     Int      @default(2) @map(\"alternate_slots\")\n  gameFormat         String?  @map(\"game_format\")\n  powerLevel         Int?     @map(\"power_level\")\n  isRecurring        Boolean  @default(false) @map(\"is_recurring\")\n  recurrencePattern  String?  @map(\"recurrence_pattern\")\n  recurrenceInterval Int      @default(1) @map(\"recurrence_interval\")\n  recurrenceEndDate  String?  @map(\"recurrence_end_date\")\n  parentEventId      String?  @map(\"parent_event_id\")\n  createdAt          DateTime @default(now()) @map(\"created_at\")\n  updatedAt          DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  community Community?      @relation(fields: [communityId], references: [id])\n  creator   User            @relation(\"CreatedEvents\", fields: [creatorId], references: [id], onDelete: Cascade)\n  host      User            @relation(\"HostedEvents\", fields: [hostId], references: [id], onDelete: Cascade)\n  coHost    User?           @relation(\"CoHostedEvents\", fields: [coHostId], references: [id], onDelete: SetNull)\n  attendees EventAttendee[]\n\n  @@index([creatorId], map: \"idx_events_creator_id\")\n  @@index([communityId], map: \"idx_events_community_id\")\n  @@index([date], map: \"idx_events_date\")\n  @@index([status], map: \"idx_events_status\")\n  @@map(\"events\")\n}\n\n// Event attendees\nmodel EventAttendee {\n  id         String   @id @default(cuid())\n  eventId    String   @map(\"event_id\")\n  userId     String   @map(\"user_id\")\n  status     String   @default(\"attending\") // attending, maybe, not_attending\n  role       String   @default(\"participant\") @map(\"role\") // participant, host, co_host, spectator\n  playerType String   @default(\"main\") @map(\"player_type\") // main, alternate\n  joinedAt   DateTime @default(now()) @map(\"joined_at\")\n\n  // Relationships\n  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)\n  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"event_attendees\")\n}\n\n// Tournament system\nmodel Tournament {\n  id                  String    @id @default(cuid())\n  name                String\n  description         String?\n  gameFormat          String    @map(\"game_format\")\n  communityId         String    @map(\"community_id\")\n  organizerId         String    @map(\"organizer_id\")\n  maxParticipants     Int       @default(8) @map(\"max_participants\")\n  currentParticipants Int       @default(0) @map(\"current_participants\")\n  status              String    @default(\"upcoming\") // upcoming, active, completed, cancelled\n  startDate           DateTime? @map(\"start_date\")\n  endDate             DateTime? @map(\"end_date\")\n  bracketData         Json?     @map(\"bracket_data\")\n  prizePool           String?   @map(\"prize_pool\")\n  rules               String?\n  createdAt           DateTime  @default(now()) @map(\"created_at\")\n  updatedAt           DateTime  @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  community    Community               @relation(fields: [communityId], references: [id])\n  organizer    User                    @relation(\"OrganizedTournaments\", fields: [organizerId], references: [id])\n  participants TournamentParticipant[]\n  rounds       TournamentRound[]\n  matches      TournamentMatch[]\n\n  @@map(\"tournaments\")\n}\n\nmodel TournamentParticipant {\n  id           String   @id @default(cuid())\n  tournamentId String   @map(\"tournament_id\")\n  userId       String   @map(\"user_id\")\n  seed         Int?\n  status       String   @default(\"registered\") // registered, active, eliminated, winner\n  joinedAt     DateTime @default(now()) @map(\"joined_at\")\n\n  // Relationships\n  tournament Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([tournamentId], map: \"idx_tournament_participants_tournament_id\")\n  @@index([userId], map: \"idx_tournament_participants_user_id\")\n  @@map(\"tournament_participants\")\n}\n\nmodel TournamentFormat {\n  id                       String  @id @default(cuid())\n  name                     String\n  code                     String  @unique\n  description              String?\n  supportsSeeding          Boolean @default(true) @map(\"supports_seeding\")\n  requiresEvenParticipants Boolean @default(false) @map(\"requires_even_participants\")\n  isActive                 Boolean @default(true) @map(\"is_active\")\n\n  @@map(\"tournament_formats\")\n}\n\nmodel TournamentRound {\n  id           String    @id @default(cuid())\n  tournamentId String    @map(\"tournament_id\")\n  roundNumber  Int       @map(\"round_number\")\n  name         String?\n  status       String    @default(\"pending\") // pending, active, completed\n  startTime    DateTime? @map(\"start_time\")\n  endTime      DateTime? @map(\"end_time\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n\n  // Relationships\n  tournament Tournament        @relation(fields: [tournamentId], references: [id], onDelete: Cascade)\n  matches    TournamentMatch[]\n\n  @@index([tournamentId], map: \"idx_tournament_rounds_tournament_id\")\n  @@index([status], map: \"idx_tournament_rounds_status\")\n  @@map(\"tournament_rounds\")\n}\n\nmodel TournamentMatch {\n  id              String    @id @default(cuid())\n  tournamentId    String    @map(\"tournament_id\")\n  roundId         String    @map(\"round_id\")\n  player1Id       String?   @map(\"player1_id\")\n  player2Id       String?   @map(\"player2_id\")\n  winnerId        String?   @map(\"winner_id\")\n  status          String    @default(\"pending\") // pending, active, completed, bye\n  gameSessionId   String?   @map(\"game_session_id\")\n  bracketPosition Int?      @map(\"bracket_position\")\n  player1Score    Int       @default(0) @map(\"player1_score\")\n  player2Score    Int       @default(0) @map(\"player2_score\")\n  matchData       Json?     @map(\"match_data\")\n  startTime       DateTime? @map(\"start_time\")\n  endTime         DateTime? @map(\"end_time\")\n  createdAt       DateTime  @default(now()) @map(\"created_at\")\n\n  // Relationships\n  tournament Tournament      @relation(fields: [tournamentId], references: [id], onDelete: Cascade)\n  round      TournamentRound @relation(fields: [roundId], references: [id], onDelete: Cascade)\n  player1    User?           @relation(\"Player1Matches\", fields: [player1Id], references: [id], onDelete: Cascade)\n  player2    User?           @relation(\"Player2Matches\", fields: [player2Id], references: [id], onDelete: Cascade)\n  winner     User?           @relation(\"WinnerMatches\", fields: [winnerId], references: [id])\n  results    MatchResult[]\n\n  @@index([tournamentId], map: \"idx_tournament_matches_tournament_id\")\n  @@index([roundId], map: \"idx_tournament_matches_round_id\")\n  @@index([status], map: \"idx_tournament_matches_status\")\n  @@index([player1Id], map: \"idx_tournament_matches_player1_id\")\n  @@index([player2Id], map: \"idx_tournament_matches_player2_id\")\n  @@map(\"tournament_matches\")\n}\n\nmodel MatchResult {\n  id           String   @id @default(cuid())\n  matchId      String   @map(\"match_id\")\n  winnerId     String   @map(\"winner_id\")\n  loserId      String?  @map(\"loser_id\")\n  winnerScore  Int      @map(\"winner_score\")\n  loserScore   Int      @map(\"loser_score\")\n  gameLength   Int?     @map(\"game_length\")\n  resultType   String   @default(\"normal\") @map(\"result_type\") // normal, forfeit, timeout, disqualification\n  notes        String?\n  reportedById String   @map(\"reported_by_id\")\n  verifiedById String?  @map(\"verified_by_id\")\n  isVerified   Boolean  @default(false) @map(\"is_verified\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  match      TournamentMatch @relation(fields: [matchId], references: [id], onDelete: Cascade)\n  winner     User            @relation(\"WinnerResults\", fields: [winnerId], references: [id])\n  loser      User?           @relation(\"LoserResults\", fields: [loserId], references: [id])\n  reportedBy User            @relation(\"ReportedResults\", fields: [reportedById], references: [id])\n  verifiedBy User?           @relation(\"VerifiedResults\", fields: [verifiedById], references: [id])\n\n  @@index([matchId], map: \"idx_match_results_match_id\")\n  @@index([winnerId], map: \"idx_match_results_winner_id\")\n  @@index([loserId], map: \"idx_match_results_loser_id\")\n  @@map(\"match_results\")\n}\n\n// Additional tables for comprehensive platform features\nmodel Notification {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  title     String\n  message   String\n  type      String // info, warning, error, success\n  isRead    Boolean  @default(false) @map(\"is_read\")\n  actionUrl String?  @map(\"action_url\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notifications\")\n}\n\nmodel Message {\n  id         String    @id @default(cuid())\n  senderId   String    @map(\"sender_id\")\n  receiverId String    @map(\"receiver_id\")\n  subject    String?\n  content    String\n  isRead     Boolean   @default(false) @map(\"is_read\")\n  createdAt  DateTime  @default(now()) @map(\"created_at\")\n  editedAt   DateTime? @map(\"edited_at\")\n\n  // Relationships\n  sender   User @relation(\"SentMessages\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiver User @relation(\"ReceivedMessages\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  @@map(\"messages\")\n}\n\nmodel GameSession {\n  id             String    @id @default(cuid())\n  name           String\n  gameType       String    @map(\"game_type\")\n  hostId         String    @map(\"host_id\")\n  coHostId       String?   @map(\"co_host_id\")\n  maxPlayers     Int       @default(4) @map(\"max_players\")\n  currentPlayers Int       @default(0) @map(\"current_players\")\n  status         String    @default(\"waiting\") // waiting, active, completed\n  isPrivate      Boolean   @default(false) @map(\"is_private\")\n  gameRoomUrl    String?   @map(\"game_room_url\")\n  settings       Json?\n  createdAt      DateTime  @default(now()) @map(\"created_at\")\n  startedAt      DateTime? @map(\"started_at\")\n  endedAt        DateTime? @map(\"ended_at\")\n\n  // Relationships\n  host   User  @relation(\"HostedGameSessions\", fields: [hostId], references: [id])\n  coHost User? @relation(\"CoHostedGameSessions\", fields: [coHostId], references: [id])\n\n  @@map(\"game_sessions\")\n}\n\nmodel UserSocialLink {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  platform  String // twitch, youtube, twitter, discord, etc.\n  url       String\n  username  String?\n  isPublic  Boolean  @default(true) @map(\"is_public\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_social_links\")\n}\n\nmodel UserGamingProfile {\n  id                String   @id @default(cuid())\n  userId            String   @map(\"user_id\")\n  platform          String // arena, mtgo, pokemon_live, etc.\n  username          String\n  skillLevel        String?  @map(\"skill_level\") // beginner, intermediate, advanced, expert\n  preferredFormats  Json?    @map(\"preferred_formats\")\n  achievementBadges Json?    @map(\"achievement_badges\")\n  statistics        Json?\n  streamingSettings Json?    @map(\"streaming_settings\")\n  createdAt         DateTime @default(now()) @map(\"created_at\")\n  updatedAt         DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_gaming_profiles\")\n}\n\nmodel Friendship {\n  id          String   @id @default(cuid())\n  requesterId String   @map(\"requester_id\")\n  receiverId  String   @map(\"receiver_id\")\n  status      String   @default(\"pending\") // pending, accepted, declined, blocked\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  requester User @relation(\"SentFriendRequests\", fields: [requesterId], references: [id], onDelete: Cascade)\n  receiver  User @relation(\"ReceivedFriendRequests\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  @@map(\"friendships\")\n}\n\nmodel UserActivity {\n  id          String   @id @default(cuid())\n  userId      String   @map(\"user_id\")\n  type        String // login, logout, tournament_join, match_complete, etc.\n  description String\n  metadata    Json?\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_activities\")\n}\n\nmodel UserSettings {\n  id                  String   @id @default(cuid())\n  userId              String   @map(\"user_id\")\n  emailNotifications  Boolean  @default(true) @map(\"email_notifications\")\n  pushNotifications   Boolean  @default(true) @map(\"push_notifications\")\n  profileVisibility   String   @default(\"public\") @map(\"profile_visibility\") // public, friends, private\n  showOnlineStatus    Boolean  @default(true) @map(\"show_online_status\")\n  allowFriendRequests Boolean  @default(true) @map(\"allow_friend_requests\")\n  allowDirectMessages Boolean  @default(true) @map(\"allow_direct_messages\")\n  language            String   @default(\"en\") @map(\"language\")\n  timezone            String?\n  createdAt           DateTime @default(now()) @map(\"created_at\")\n  updatedAt           DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_settings\")\n}\n\nmodel MatchmakingPreference {\n  id              String   @id @default(cuid())\n  userId          String   @unique @map(\"user_id\")\n  selectedGames   Json     @default(\"[\\\"MTG\\\"]\") @map(\"selected_games\")\n  selectedFormats Json     @default(\"[\\\"commander\\\"]\") @map(\"selected_formats\")\n  powerLevelMin   Int      @default(1) @map(\"power_level_min\")\n  powerLevelMax   Int      @default(10) @map(\"power_level_max\")\n  playstyle       String   @default(\"any\") // casual, focused, competitive, any\n  location        String?\n  onlineOnly      Boolean  @default(false) @map(\"online_only\")\n  availability    String   @default(\"any\") // morning, afternoon, evening, night, any\n  language        String   @default(\"english\")\n  maxDistance     Int      @default(50) @map(\"max_distance\")\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n  updatedAt       DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"matchmaking_preferences\")\n}\n\n// Forum system\nmodel ForumPost {\n  id          String    @id @default(cuid())\n  title       String\n  content     String\n  authorId    String    @map(\"author_id\")\n  communityId String    @map(\"community_id\")\n  category    String // strategy, deck-tech, stream-tips, general, collaboration\n  isPinned    Boolean   @default(false) @map(\"is_pinned\")\n  isLocked    Boolean   @default(false) @map(\"is_locked\")\n  viewCount   Int       @default(0) @map(\"view_count\")\n  likeCount   Int       @default(0) @map(\"like_count\")\n  replyCount  Int       @default(0) @map(\"reply_count\")\n  lastReplyAt DateTime? @map(\"last_reply_at\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  updatedAt   DateTime  @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  author    User            @relation(fields: [authorId], references: [id], onDelete: Cascade)\n  community Community       @relation(fields: [communityId], references: [id], onDelete: Cascade)\n  replies   ForumReply[]\n  likes     ForumPostLike[]\n\n  @@index([authorId], map: \"idx_forum_posts_author_id\")\n  @@index([communityId], map: \"idx_forum_posts_community_id\")\n  @@index([category], map: \"idx_forum_posts_category\")\n  @@index([createdAt], map: \"idx_forum_posts_created_at\")\n  @@map(\"forum_posts\")\n}\n\nmodel ForumReply {\n  id            String   @id @default(cuid())\n  postId        String   @map(\"post_id\")\n  authorId      String   @map(\"author_id\")\n  content       String\n  parentReplyId String?  @map(\"parent_reply_id\")\n  likeCount     Int      @default(0) @map(\"like_count\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @default(now()) @map(\"updated_at\")\n\n  // Relationships\n  post   ForumPost        @relation(fields: [postId], references: [id], onDelete: Cascade)\n  author User             @relation(fields: [authorId], references: [id], onDelete: Cascade)\n  likes  ForumReplyLike[]\n\n  @@index([postId], map: \"idx_forum_replies_post_id\")\n  @@index([authorId], map: \"idx_forum_replies_author_id\")\n  @@index([createdAt], map: \"idx_forum_replies_created_at\")\n  @@map(\"forum_replies\")\n}\n\nmodel ForumPostLike {\n  id        String   @id @default(cuid())\n  postId    String   @map(\"post_id\")\n  userId    String   @map(\"user_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  post ForumPost @relation(fields: [postId], references: [id], onDelete: Cascade)\n  user User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([postId], map: \"idx_forum_post_likes_post_id\")\n  @@index([userId], map: \"idx_forum_post_likes_user_id\")\n  @@map(\"forum_post_likes\")\n}\n\nmodel ForumReplyLike {\n  id        String   @id @default(cuid())\n  replyId   String   @map(\"reply_id\")\n  userId    String   @map(\"user_id\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Relationships\n  reply ForumReply @relation(fields: [replyId], references: [id], onDelete: Cascade)\n  user  User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([replyId], map: \"idx_forum_reply_likes_reply_id\")\n  @@index([userId], map: \"idx_forum_reply_likes_user_id\")\n  @@map(\"forum_reply_likes\")\n}\n\nmodel PasswordResetToken {\n  id        String   @id @default(cuid())\n  userId    String   @map(\"user_id\")\n  token     String   @unique\n  isUsed    Boolean  @default(false) @map(\"is_used\")\n  expiresAt DateTime @map(\"expires_at\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@map(\"password_reset_tokens\")\n}\n",
  "inlineSchemaHash": "740618cc0a60de68028b349fb87dcecdf77d636fd0ce66bbbe02836e9b7ae359",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_account_id\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"accounts\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_token\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification_tokens\"},\"LegacySession\":{\"fields\":[{\"name\":\"sid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sess\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"legacy_sessions\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"profileImageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image_url\"},{\"name\":\"primaryCommunity\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"primary_community\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statusMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"status_message\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"date_of_birth\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_private\"},{\"name\":\"showOnlineStatus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"show_online_status\"},{\"name\":\"allowDirectMessages\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"allow_direct_messages\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"userCommunities\",\"kind\":\"object\",\"type\":\"UserCommunity\",\"relationName\":\"UserToUserCommunity\"},{\"name\":\"themePreferences\",\"kind\":\"object\",\"type\":\"ThemePreference\",\"relationName\":\"ThemePreferenceToUser\"},{\"name\":\"createdEvents\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"CreatedEvents\"},{\"name\":\"hostedEvents\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"HostedEvents\"},{\"name\":\"coHostedEvents\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"CoHostedEvents\"},{\"name\":\"eventAttendees\",\"kind\":\"object\",\"type\":\"EventAttendee\",\"relationName\":\"EventAttendeeToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"SentMessages\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ReceivedMessages\"},{\"name\":\"hostedGameSessions\",\"kind\":\"object\",\"type\":\"GameSession\",\"relationName\":\"HostedGameSessions\"},{\"name\":\"coHostedGameSessions\",\"kind\":\"object\",\"type\":\"GameSession\",\"relationName\":\"CoHostedGameSessions\"},{\"name\":\"socialLinks\",\"kind\":\"object\",\"type\":\"UserSocialLink\",\"relationName\":\"UserToUserSocialLink\"},{\"name\":\"gamingProfiles\",\"kind\":\"object\",\"type\":\"UserGamingProfile\",\"relationName\":\"UserToUserGamingProfile\"},{\"name\":\"sentFriendRequests\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"SentFriendRequests\"},{\"name\":\"receivedFriendRequests\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"ReceivedFriendRequests\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"UserActivity\",\"relationName\":\"UserToUserActivity\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSettings\",\"relationName\":\"UserToUserSettings\"},{\"name\":\"matchmakingPreferences\",\"kind\":\"object\",\"type\":\"MatchmakingPreference\",\"relationName\":\"MatchmakingPreferenceToUser\"},{\"name\":\"organizedTournaments\",\"kind\":\"object\",\"type\":\"Tournament\",\"relationName\":\"OrganizedTournaments\"},{\"name\":\"tournamentParticipation\",\"kind\":\"object\",\"type\":\"TournamentParticipant\",\"relationName\":\"TournamentParticipantToUser\"},{\"name\":\"forumPosts\",\"kind\":\"object\",\"type\":\"ForumPost\",\"relationName\":\"ForumPostToUser\"},{\"name\":\"forumReplies\",\"kind\":\"object\",\"type\":\"ForumReply\",\"relationName\":\"ForumReplyToUser\"},{\"name\":\"forumPostLikes\",\"kind\":\"object\",\"type\":\"ForumPostLike\",\"relationName\":\"ForumPostLikeToUser\"},{\"name\":\"forumReplyLikes\",\"kind\":\"object\",\"type\":\"ForumReplyLike\",\"relationName\":\"ForumReplyLikeToUser\"},{\"name\":\"tournamentMatchesPlayer1\",\"kind\":\"object\",\"type\":\"TournamentMatch\",\"relationName\":\"Player1Matches\"},{\"name\":\"tournamentMatchesPlayer2\",\"kind\":\"object\",\"type\":\"TournamentMatch\",\"relationName\":\"Player2Matches\"},{\"name\":\"tournamentMatchWins\",\"kind\":\"object\",\"type\":\"TournamentMatch\",\"relationName\":\"WinnerMatches\"},{\"name\":\"matchResultsWins\",\"kind\":\"object\",\"type\":\"MatchResult\",\"relationName\":\"WinnerResults\"},{\"name\":\"matchResultsLosses\",\"kind\":\"object\",\"type\":\"MatchResult\",\"relationName\":\"LoserResults\"},{\"name\":\"matchResultsReported\",\"kind\":\"object\",\"type\":\"MatchResult\",\"relationName\":\"ReportedResults\"},{\"name\":\"matchResultsVerified\",\"kind\":\"object\",\"type\":\"MatchResult\",\"relationName\":\"VerifiedResults\"}],\"dbName\":\"users\"},\"Community\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"display_name\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"themeColor\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"theme_color\"},{\"name\":\"iconClass\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"icon_class\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"userCommunities\",\"kind\":\"object\",\"type\":\"UserCommunity\",\"relationName\":\"CommunityToUserCommunity\"},{\"name\":\"themePreferences\",\"kind\":\"object\",\"type\":\"ThemePreference\",\"relationName\":\"CommunityToThemePreference\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"CommunityToEvent\"},{\"name\":\"forumPosts\",\"kind\":\"object\",\"type\":\"ForumPost\",\"relationName\":\"CommunityToForumPost\"},{\"name\":\"tournaments\",\"kind\":\"object\",\"type\":\"Tournament\",\"relationName\":\"CommunityToTournament\"}],\"dbName\":\"communities\"},\"UserCommunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"communityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"community_id\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_primary\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserCommunity\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"Community\",\"relationName\":\"CommunityToUserCommunity\"}],\"dbName\":\"user_communities\"},\"ThemePreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"communityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"community_id\"},{\"name\":\"themeMode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"theme_mode\"},{\"name\":\"customColors\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"custom_colors\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ThemePreferenceToUser\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"Community\",\"relationName\":\"CommunityToThemePreference\"}],\"dbName\":\"theme_preferences\"},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"communityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"community_id\"},{\"name\":\"creatorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"creator_id\"},{\"name\":\"hostId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"host_id\"},{\"name\":\"coHostId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"co_host_id\"},{\"name\":\"maxAttendees\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_attendees\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"playerSlots\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"player_slots\"},{\"name\":\"alternateSlots\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"alternate_slots\"},{\"name\":\"gameFormat\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"game_format\"},{\"name\":\"powerLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"power_level\"},{\"name\":\"isRecurring\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_recurring\"},{\"name\":\"recurrencePattern\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"recurrence_pattern\"},{\"name\":\"recurrenceInterval\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"recurrence_interval\"},{\"name\":\"recurrenceEndDate\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"recurrence_end_date\"},{\"name\":\"parentEventId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"parent_event_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"Community\",\"relationName\":\"CommunityToEvent\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreatedEvents\"},{\"name\":\"host\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HostedEvents\"},{\"name\":\"coHost\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CoHostedEvents\"},{\"name\":\"attendees\",\"kind\":\"object\",\"type\":\"EventAttendee\",\"relationName\":\"EventToEventAttendee\"}],\"dbName\":\"events\"},\"EventAttendee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"event_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role\"},{\"name\":\"playerType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"player_type\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventAttendee\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventAttendeeToUser\"}],\"dbName\":\"event_attendees\"},\"Tournament\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameFormat\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"game_format\"},{\"name\":\"communityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"community_id\"},{\"name\":\"organizerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"organizer_id\"},{\"name\":\"maxParticipants\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_participants\"},{\"name\":\"currentParticipants\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_participants\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"bracketData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"bracket_data\"},{\"name\":\"prizePool\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prize_pool\"},{\"name\":\"rules\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"Community\",\"relationName\":\"CommunityToTournament\"},{\"name\":\"organizer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizedTournaments\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"TournamentParticipant\",\"relationName\":\"TournamentToTournamentParticipant\"},{\"name\":\"rounds\",\"kind\":\"object\",\"type\":\"TournamentRound\",\"relationName\":\"TournamentToTournamentRound\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"TournamentMatch\",\"relationName\":\"TournamentToTournamentMatch\"}],\"dbName\":\"tournaments\"},\"TournamentParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tournamentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tournament_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"seed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"tournament\",\"kind\":\"object\",\"type\":\"Tournament\",\"relationName\":\"TournamentToTournamentParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TournamentParticipantToUser\"}],\"dbName\":\"tournament_participants\"},\"TournamentFormat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supportsSeeding\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"supports_seeding\"},{\"name\":\"requiresEvenParticipants\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"requires_even_participants\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"}],\"dbName\":\"tournament_formats\"},\"TournamentRound\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tournamentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tournament_id\"},{\"name\":\"roundNumber\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"round_number\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_time\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_time\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"tournament\",\"kind\":\"object\",\"type\":\"Tournament\",\"relationName\":\"TournamentToTournamentRound\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"TournamentMatch\",\"relationName\":\"TournamentMatchToTournamentRound\"}],\"dbName\":\"tournament_rounds\"},\"TournamentMatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tournamentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tournament_id\"},{\"name\":\"roundId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"round_id\"},{\"name\":\"player1Id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"player1_id\"},{\"name\":\"player2Id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"player2_id\"},{\"name\":\"winnerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"winner_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameSessionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"game_session_id\"},{\"name\":\"bracketPosition\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bracket_position\"},{\"name\":\"player1Score\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"player1_score\"},{\"name\":\"player2Score\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"player2_score\"},{\"name\":\"matchData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"match_data\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_time\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_time\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"tournament\",\"kind\":\"object\",\"type\":\"Tournament\",\"relationName\":\"TournamentToTournamentMatch\"},{\"name\":\"round\",\"kind\":\"object\",\"type\":\"TournamentRound\",\"relationName\":\"TournamentMatchToTournamentRound\"},{\"name\":\"player1\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Player1Matches\"},{\"name\":\"player2\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Player2Matches\"},{\"name\":\"winner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"WinnerMatches\"},{\"name\":\"results\",\"kind\":\"object\",\"type\":\"MatchResult\",\"relationName\":\"MatchResultToTournamentMatch\"}],\"dbName\":\"tournament_matches\"},\"MatchResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"match_id\"},{\"name\":\"winnerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"winner_id\"},{\"name\":\"loserId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"loser_id\"},{\"name\":\"winnerScore\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"winner_score\"},{\"name\":\"loserScore\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"loser_score\"},{\"name\":\"gameLength\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"game_length\"},{\"name\":\"resultType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"result_type\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportedById\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reported_by_id\"},{\"name\":\"verifiedById\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"verified_by_id\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"match\",\"kind\":\"object\",\"type\":\"TournamentMatch\",\"relationName\":\"MatchResultToTournamentMatch\"},{\"name\":\"winner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"WinnerResults\"},{\"name\":\"loser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LoserResults\"},{\"name\":\"reportedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportedResults\"},{\"name\":\"verifiedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"VerifiedResults\"}],\"dbName\":\"match_results\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"actionUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"action_url\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sender_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"editedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"edited_at\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentMessages\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReceivedMessages\"}],\"dbName\":\"messages\"},\"GameSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"game_type\"},{\"name\":\"hostId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"host_id\"},{\"name\":\"coHostId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"co_host_id\"},{\"name\":\"maxPlayers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_players\"},{\"name\":\"currentPlayers\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"current_players\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_private\"},{\"name\":\"gameRoomUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"game_room_url\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ended_at\"},{\"name\":\"host\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HostedGameSessions\"},{\"name\":\"coHost\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CoHostedGameSessions\"}],\"dbName\":\"game_sessions\"},\"UserSocialLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSocialLink\"}],\"dbName\":\"user_social_links\"},\"UserGamingProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillLevel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"skill_level\"},{\"name\":\"preferredFormats\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"preferred_formats\"},{\"name\":\"achievementBadges\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"achievement_badges\"},{\"name\":\"statistics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"streamingSettings\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"streaming_settings\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserGamingProfile\"}],\"dbName\":\"user_gaming_profiles\"},\"Friendship\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requesterId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"requester_id\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receiver_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"requester\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentFriendRequests\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReceivedFriendRequests\"}],\"dbName\":\"friendships\"},\"UserActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserActivity\"}],\"dbName\":\"user_activities\"},\"UserSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_notifications\"},{\"name\":\"pushNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"push_notifications\"},{\"name\":\"profileVisibility\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_visibility\"},{\"name\":\"showOnlineStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"show_online_status\"},{\"name\":\"allowFriendRequests\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"allow_friend_requests\"},{\"name\":\"allowDirectMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"allow_direct_messages\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"language\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSettings\"}],\"dbName\":\"user_settings\"},\"MatchmakingPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"selectedGames\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"selected_games\"},{\"name\":\"selectedFormats\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"selected_formats\"},{\"name\":\"powerLevelMin\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"power_level_min\"},{\"name\":\"powerLevelMax\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"power_level_max\"},{\"name\":\"playstyle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"onlineOnly\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"online_only\"},{\"name\":\"availability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxDistance\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_distance\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MatchmakingPreferenceToUser\"}],\"dbName\":\"matchmaking_preferences\"},\"ForumPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_id\"},{\"name\":\"communityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"community_id\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPinned\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_pinned\"},{\"name\":\"isLocked\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_locked\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"view_count\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"replyCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"reply_count\"},{\"name\":\"lastReplyAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_reply_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ForumPostToUser\"},{\"name\":\"community\",\"kind\":\"object\",\"type\":\"Community\",\"relationName\":\"CommunityToForumPost\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"ForumReply\",\"relationName\":\"ForumPostToForumReply\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"ForumPostLike\",\"relationName\":\"ForumPostToForumPostLike\"}],\"dbName\":\"forum_posts\"},\"ForumReply\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"post_id\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"author_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentReplyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"parent_reply_id\"},{\"name\":\"likeCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"like_count\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"ForumPost\",\"relationName\":\"ForumPostToForumReply\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ForumReplyToUser\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"ForumReplyLike\",\"relationName\":\"ForumReplyToForumReplyLike\"}],\"dbName\":\"forum_replies\"},\"ForumPostLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"post_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"ForumPost\",\"relationName\":\"ForumPostToForumPostLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ForumPostLikeToUser\"}],\"dbName\":\"forum_post_likes\"},\"ForumReplyLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"replyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reply_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"reply\",\"kind\":\"object\",\"type\":\"ForumReply\",\"relationName\":\"ForumReplyToForumReplyLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ForumReplyLikeToUser\"}],\"dbName\":\"forum_reply_likes\"},\"PasswordResetToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isUsed\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_used\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"password_reset_tokens\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

