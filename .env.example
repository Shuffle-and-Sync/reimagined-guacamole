# ==============================================
# SHUFFLE & SYNC - ENVIRONMENT VARIABLES
# ==============================================
# Copy this file to .env.local for development
# For production, see .env.production.template

# ==============================================
# üî¥ CRITICAL VARIABLES - REQUIRED FOR STARTUP
# ==============================================

# Database Connection
# PostgreSQL connection string for main database
# Format: postgresql://username:password@host:port/database_name
# Example: postgresql://user:password@localhost:5432/shufflesync_dev
DATABASE_URL=postgresql://localhost:5432/shufflesync_dev

# Direct database URL for migrations (if different from DATABASE_URL)
# Used by Drizzle for schema operations
# Example: postgresql://user:password@localhost:5432/shufflesync_dev
DATABASE_DIRECT_URL=

# Authentication Secret
# Must be at least 32 characters long
# Use: openssl rand -base64 32
# SECURITY: Change from default value immediately!
AUTH_SECRET=demo-secret-key-for-development-only-not-for-production

# Application Base URL
# Used for OAuth callbacks and redirects
# Development: http://localhost:3000 or http://localhost:5000
# Production: https://your-domain.com
AUTH_URL=http://localhost:3000

# Trust host header (required for Auth.js)
AUTH_TRUST_HOST=true

# ==============================================
# üü° AUTHENTICATION PROVIDERS
# ==============================================

# Google OAuth 2.0 (Primary Authentication)
# Get credentials from: https://console.developers.google.com
# Required for: User authentication, Google Calendar integration
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# ==============================================
# üü¢ OPTIONAL SERVICES
# ==============================================

# Email Service (SendGrid)
# Get API key from: https://app.sendgrid.com/settings/api_keys
# Used for: Transactional emails, notifications
# Example: SG.xxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SENDGRID_API_KEY=

# Stream Encryption Key
# Must be exactly 32 characters long
# Used for: Encrypting sensitive streaming data
# Generate with: openssl rand -hex 16
STREAM_KEY_ENCRYPTION_KEY=

# ==============================================
# üîµ STREAMING PLATFORM INTEGRATIONS
# ==============================================

# Twitch Integration
# Get credentials from: https://dev.twitch.tv/console/apps
# Used for: Twitch stream status, OAuth
TWITCH_CLIENT_ID=
TWITCH_CLIENT_SECRET=

# YouTube API
# Get API key from: https://console.developers.google.com
# Used for: YouTube stream status, metadata
YOUTUBE_API_KEY=

# Discord Bot Integration
# Get token from: https://discord.com/developers/applications
# Used for: Discord notifications, community integration
DISCORD_BOT_TOKEN=

# ==============================================
# ‚öôÔ∏è APPLICATION CONFIGURATION
# ==============================================

# Environment
# Values: development, production, test
NODE_ENV=development

# Server Port
# Development: 3000, 5000, or any available port
# Production: Set by deployment platform (usually 8080)
PORT=3000

# ==============================================
# üõ°Ô∏è SECURITY & CORS
# ==============================================

# Allowed Origins for CORS
# Comma-separated list of allowed origins
# Development: http://localhost:3000,http://localhost:5000
# Production: https://your-domain.com,https://www.your-domain.com
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000

# Rate Limiting
# Time window in milliseconds (default: 15 minutes)
RATE_LIMIT_WINDOW_MS=900000
# Maximum requests per window (default: 100)
RATE_LIMIT_MAX_REQUESTS=100

# Session Configuration
# Session max age in milliseconds (default: 7 days)
SESSION_MAX_AGE=604800000

# ==============================================
# üóÑÔ∏è CACHING & PERFORMANCE
# ==============================================

# Redis Cache (Optional)
# Format: redis://username:password@host:port
# Example: redis://localhost:6379
# Leave empty to disable caching
REDIS_URL=

# ==============================================
# üìä MONITORING & LOGGING
# ==============================================

# Log Level
# Values: error, warn, info, debug
# Production: info or warn
# Development: debug
LOG_LEVEL=debug

# Error Tracking (Sentry)
# Get DSN from: https://sentry.io
# Used for: Error tracking and monitoring
# Example: https://abc123@o123456.ingest.sentry.io/123456
SENTRY_DSN=

# Google Cloud Project (for monitoring)
# Used for: Cloud Logging, monitoring services
GOOGLE_CLOUD_PROJECT=

# ==============================================
# üîß DEVELOPMENT ONLY
# ==============================================

# Database SSL Mode (development only)
# Set to 'disable' for local development
# Production should use 'require'
DB_SSL_MODE=disable

# Disable telemetry in development
NEXT_TELEMETRY_DISABLED=1

# ==============================================
# üìù SETUP INSTRUCTIONS
# ==============================================
#
# 1. Copy this file to .env.local
#    cp .env.example .env.local
#
# 2. Update required variables (marked with üî¥)
#    - DATABASE_URL: Set up PostgreSQL database
#    - AUTH_SECRET: Generate secure secret (32+ chars)
#    - AUTH_URL: Set to your local development URL
#    - GOOGLE_CLIENT_ID/SECRET: Set up Google OAuth
#
# 3. Configure optional services as needed
#    - SendGrid for email
#    - Twitch/YouTube for streaming features
#    - Redis for caching
#
# 4. Run database setup
#    npm run db:push
#
# 5. Start development server
#    npm run dev
#
# üö® SECURITY WARNINGS:
# - Never commit .env.local to version control
# - Use strong, unique secrets in production
# - Change all demo/example values
# - Rotate secrets regularly
#